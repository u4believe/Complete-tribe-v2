/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  13579: {
    MemeLaunchpad: {
      address: "0x0f840321794a7ec3d2c3cfb82414b9eccdb59b4c",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_treasuryAddress",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "BONDING_CURVE_PERCENT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "CREATION_FEE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "CREATOR_ALLOCATION_PERCENT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "FEE_PERCENT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "HELD_PERCENT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "INITIAL_PRICE",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "MAX_SUPPLY",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "allTokens",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "buyTokens",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "minTokensOut",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "tokensBought",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "calculateTokenAmount",
          inputs: [
            {
              name: "trustAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currentPrice",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "calculateTokensAfterBuy",
          inputs: [
            {
              name: "tokensBefore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "trustBefore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "trustAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "calculateTrustAfterSell",
          inputs: [
            {
              name: "tokensBefore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "trustBefore",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "tokensAfter",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "completeTokenLaunch",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createToken",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "metadata",
              type: "string",
              internalType: "string",
            },
            {
              name: "totalSupply",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAllTokens",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address[]",
              internalType: "address[]",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getCurrentPrice",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenCount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenInfo",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct MemeLaunchpad.TokenInfo",
              components: [
                {
                  name: "name",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "symbol",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "metadata",
                  type: "string",
                  internalType: "string",
                },
                {
                  name: "creator",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "creatorAllocation",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "heldTokens",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "maxSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "currentSupply",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "virtualTrust",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "virtualTokens",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "completed",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "creationTime",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "isValidToken",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "sellTokens",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
            {
              name: "tokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "minEthOut",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "ethReceived",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "tokenInfo",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "metadata",
              type: "string",
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "creatorAllocation",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "heldTokens",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "maxSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "currentSupply",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "virtualTrust",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "virtualTokens",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "completed",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "creationTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "treasuryAddress",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdrawHeldTokens",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawLiquidity",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "HeldTokensWithdrawn",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokenCompleted",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "finalSupply",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "finalPrice",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokenCreated",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "symbol",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "metadata",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "creator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "creatorAllocation",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensBought",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "buyer",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ethAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokenAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newPrice",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TokensSold",
          inputs: [
            {
              name: "tokenAddress",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "seller",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "ethAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "tokenAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newPrice",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 8111660,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
